import * as React from 'react';
import { PropertyControls, ControlType } from 'framer';
import styled from 'styled-components';
import * as tokens from './tokens';

const MenuItemContainer = styled.div`
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: row;
    justify-content: flex-start;
    align-items: center;
    padding-left: 16px;
    padding-right: 16px;
    padding-top: ${props => props.paddingTop}px;
    padding-bottom: ${props => props.paddingBottom}px;
`;

const Background = styled.div`
    background: ${tokens.ColorNeutral._0};
    opacity: 0.9;
    position: absolute;
    width: 100%;
    height: 100%;
    z-index: -10000;
    top: 0;
    left: 0;
`;

const Icon = styled.div`
    width: 24px;
    height: 24px;
    margin-right: 8px;
`;

const Text = styled.p`
    flex-grow: 1;
    margin: 0;
    color: ${tokens.TextColor.dark};
    font-size: 16px;
    font-family: 'BrownPro';
`;

// Define type of property
interface Props {
    text: string;
    paddingTop: number;
    paddingBottom: number;
    visible: boolean;
    onClick(e: any): void;
}

export class ContextualMenuItem extends React.Component<Props> {
    // Set default properties
    static defaultProps = {
        text: 'Menu item name',
        height: 64,
        paddingTop: '8',
        paddingBottom: '8',
        visible: true,
        onClick: () => null
    };

    // Items shown in property panel
    static propertyControls: PropertyControls = {
        text: { type: ControlType.String, title: 'Text' },
        paddingTop: {
            type: ControlType.Enum,
            title: 'Padding top',
            options: ['16', '8'],
            optionTitles: ['Top', 'Normal']
        },
        paddingBottom: {
            type: ControlType.Enum,
            title: 'Padding bottom',
            options: ['16', '8'],
            optionTitles: ['Bottom', 'Normal']
        },
        visible: {
            type: ControlType.Boolean,
            title: 'Visible'
        }
    };

    render() {
        return this.props.visible ? (
            <MenuItemContainer
                paddingTop={this.props.paddingTop}
                paddingBottom={this.props.paddingBottom}
                onClick={this.props.onClick}>
                <Background />
                <Icon>{this.props.children}</Icon>
                <Text>{this.props.text}</Text>
            </MenuItemContainer>
        ) : null;
    }
}
