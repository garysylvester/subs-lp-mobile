import * as React from "react";
import { FrameProperties, PropertyControls, ControlType } from "framer";

interface CarouselItemProps extends FrameProperties {
    backgroundImage: string;
    logo: string;
    title: string;
    subtitle: string;
    highlightTitle: string;
    primaryButtonText: string;
    secondaryButtonText: string;
    active: boolean;
    onMouseOver?(e: React.MouseEvent<HTMLDivElement>): void;
    onMouseOut?(e: React.MouseEvent<HTMLDivElement>): void;
    onClick?(e: React.MouseEvent<HTMLDivElement>): void;
}

export class CarouselItem extends React.Component<Partial<CarouselItemProps>> {
    static propertyControls: PropertyControls = {
        backgroundImage: {
            title: "Background Image",
            type: ControlType.Image
        },
        logo: {
            title: "Logo",
            type: ControlType.Image
        },
        title: {
            title: "Title",
            type: ControlType.String
        },
        subtitle: {
            title: "Subtitle",
            type: ControlType.String
        },
        highlightTitle: {
            title: "Highlight Title",
            type: ControlType.String
        },
        primaryButtonText: {
            title: "Primary Button",
            type: ControlType.String
        },
        secondaryButtonText: {
            title: "Secondary Button",
            type: ControlType.String,
            hidden: props => !props.primaryButtonText
        }
    };

    static defaultProps = {
        height: 223,
        active: false,
        onMouseOver: () => null,
        onMouseOut: () => null,
        onClick: () => null
    };

    state = {
        hover: false
    };

    render() {
        return (
            <div
                style={{
                    position: "relative",
                    display: "flex",
                    flexDirection: "column",
                    flexGrow: 1
                }}
                onMouseOver={e => {
                    this.setState(
                        {
                            hover: true
                        },
                        () => {
                            this.props.onMouseOver(e);
                        }
                    );
                }}
                onMouseOut={e => {
                    this.setState(
                        {
                            hover: false
                        },
                        () => {
                            this.props.onMouseOut(e);
                        }
                    );
                }}
                onClick={this.props.onClick}
            >
                {this.props.active ? (
                    <div
                        style={{
                            position: "absolute",
                            top: -4,
                            left: "50%",
                            right: "50%",
                            width: 0,
                            height: 0,
                            borderLeft: "8px solid transparent",
                            borderRight: "8px solid transparent",
                            borderBottom: "8px solid #fff",
                            transform: "translate(-50%, -50%)"
                        }}
                    />
                ) : null}
                <div
                    style={{
                        display: "flex",
                        position: "relative",
                        flexDirection: "column",
                        justifyContent: "center",
                        alignItems: "center",
                        flexGrow: 1,
                        height: 172,
                        borderRadius: 16,
                        backgroundImage: `url(${this.props.backgroundImage})`,
                        backgroundPosition: "center center",
                        backgroundSize: "cover",
                        overflow: "hidden"
                    }}
                >
                    <img
                        style={{
                            width: "66%",
                            height: "40%",
                            objectFit: "contain"
                        }}
                        src={this.props.logo}
                    />
                    <div
                        style={{
                            position: "absolute",
                            top: 0,
                            right: 0,
                            bottom: 0,
                            left: 0,
                            backgroundColor:
                                this.state.hover || this.props.active ? "rgba(0, 0, 0, 0)" : "rgba(0, 0, 0, .33)",
                            border: `2px solid ${this.props.active ? "#fff" : "transparent"}`,
                            borderRadius: "inherit",
                            transition: "background-color .2s, border .33s"
                        }}
                    />
                </div>
                <div
                    style={{
                        display: "flex",
                        flexDirection: "column",
                        alignItems: "center",
                        marginTop: 8,
                        fontFamily: "BrownPro, sans-serif",
                        fontWeight: 600
                    }}
                >
                    <span style={{ fontSize: 18, color: "#fff" }}>{this.props.title}</span>
                    <span
                        style={{
                            fontSize: 12,
                            marginTop: 8,
                            textTransform: "uppercase",
                            letterSpacing: ".2em",
                            color: "rgb(144, 142, 151)"
                        }}
                    >
                        {this.props.subtitle}
                    </span>
                </div>
            </div>
        );
    }
}
